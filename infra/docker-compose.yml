services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: nyc_subway
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./01-init.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  api:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/nyc_subway
      REDIS_URL: redis://redis:6379/0
      ENVIRONMENT: development
      DEBUG: "true"
      MTA_API_KEY: ${MTA_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../backend:/app
      - gtfs_data:/app/data
    dns:
      - 8.8.8.8
      - 1.1.1.1
    restart: unless-stopped

  poller:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/nyc_subway
      REDIS_URL: redis://redis:6379/0
      ENVIRONMENT: development
      DEBUG: "true"
      MTA_API_KEY: ${MTA_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../backend:/app
    command: python -m app.core.gtfs_rt
    dns:
      - 8.8.8.8
      - 1.1.1.1
    restart: unless-stopped

  frontend:
    image: nginx:alpine
    ports:
      - "3000:80"
    volumes:
      - ../frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  gtfs_data:
